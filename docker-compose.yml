version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27018:27017"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      api-gateway:
        condition: service_started

  auth-service:
    container_name: auth-service
    build: ./auth-service
    ports:
      - "5001:5001"
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  product-service:
    container_name: product-service
    build: ./product-service
    ports:
      - "5002:5002"
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  order-service:
    container_name: order-service
    build: ./order-service
    ports:
      - "5003:5003"
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  notification-service:
    container_name: notification-service
    build: ./notification-service
    ports:
      - "5004:5004"
    env_file: ./notification-service/.env
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  api-gateway:
    build: ./api-gateway
    ports:
      - "4000:4000"
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
      auth-service:
        condition: service_started
      product-service:
        condition: service_started
      order-service:
        condition: service_started

networks:
  app-network:
    driver: bridge
